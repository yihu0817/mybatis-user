<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wisezone.food.usermanager.dao.IUserDao">
	<insert id="insertUser"
		parameterType="com.wisezone.food.usermanager.entity.User"
		useGeneratedKeys="true">
		INSERT INTO user
		(name,password,header_uri,logindate)VALUES(#{userName},#{passWorld},#{headerImg},#{loginTime});
	</insert>

	<update id="updateUser"
		parameterType="com.wisezone.food.usermanager.entity.User">
		UPDATE user
		<set>
			<if test="userName != null">
				name=#{userName},
			</if>
			<if test="passWorld != null">
				password=#{passWorld},
			</if>
			<if test="headerImg != null">
				header_uri=#{headerImg},
			</if>
			<if test="loginTime != null">
				logindate=#{loginTime}
			</if>
		</set>
		WHERE id=#{id}
	</update>

	<delete id="deleteUser" parameterType="int">
		DELETE FROM user WHERE
		id=#{id}
	</delete>

	<delete id="deleteUserByNameAndPsw" parameterType="hashmap">
		DELETE FROM
		user WHERE name=#{username} AND password = #{password}
	</delete>

	<resultMap type="com.wisezone.food.usermanager.entity.User"
		id="userResultMap">
		<id property="id" column="id" jdbcType="INTEGER" />
		<result property="userName" column="name" jdbcType="VARCHAR" />
		<result property="passWorld" column="password"
			jdbcType="VARCHAR" />
		<result property="headerImg" column="header_uri"
			jdbcType="VARCHAR" />
		<result property="loginTime" column="logindate"
			jdbcType="TIMESTAMP" />
	</resultMap>

	<select id="findUserByID" parameterType="int"
		resultMap="userResultMap">
		SELECT id,name,password,header_uri,logindate FROM user WHERE
		id=#{id}
	</select>

	<select id="findUserByNameAndPsw" parameterType="hashmap"
		resultMap="userResultMap">
		SELECT id,name,password,header_uri,logindate FROM user WHERE
		name=#{username} AND password=#{password}
	</select>

	<select id="findUserByNameAndPswTwo" resultMap="userResultMap">
		SELECT
		id,name,password,header_uri,logindate FROM user

		<!-- where 元素只会在至少有一个子元素的条件返回 SQL 子句的情况下才去插入“WHERE”子句。而且，若语句的开头为“AND”或“OR”，where 
			元素也会将它们去除。 -->
		<!-- <where> -->
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="param1 !=null ">
				name=#{param1}
			</if>

			<if test="param2 != null">
				AND password=#{param2}
			</if>
		</trim>
		<!-- </where> -->
	</select>

	<select id="findUserLists" resultMap="userResultMap">
		SELECT
		id,name,password,header_uri,logindate FROM user
	</select>


</mapper>